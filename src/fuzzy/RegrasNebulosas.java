package fuzzy;

public class RegrasNebulosas {
    public static float[] Regras(float[] regra, int n){
     float[] vet = new float[7];
     switch(n){
         case 1: vet[0] = regra[2];
                 vet[1] = regra[11];
                 vet[2] = regra[14];
                 vet[3] = 99;
                 vet[4] = 99;
                 vet[5] = 99;
                 vet[6] = 99;
                 break;
         case 2: vet[0] = regra[1];
                 vet[1] = regra[5];
                 vet[2] = regra[8];
                 vet[3] = regra[11];
                 vet[4] = regra[14];
                 vet[5] = regra[15];
                 vet[6] = 99;
                 break;
         case 3: vet[0] = regra[1];
                 vet[1] = regra[4];
                 vet[2] = regra[7];
                 vet[3] = regra[10];
                 vet[4] = regra[7];
                 vet[5] = regra[16];
                 vet[6] = 99;
                 break;
         case 4: vet[0] = regra[1];
                 vet[1] = regra[6];
                 vet[2] = regra[10];
                 vet[3] = regra[12];
                 vet[4] = regra[16];
                 vet[5] = 99;
                 vet[6] = 99;
                 break; 
         case 5: vet[0] = regra[1];
                 vet[1] = regra[8];
                 vet[2] = regra[14];
                 vet[3] = regra[17];
                 vet[4] = 99;
                 vet[5] = 99;
                 vet[6] = 99;
                 break;
         case 6: vet[0] = regra[2];
                 vet[1] = regra[8];
                 vet[2] = regra[10];
                 vet[3] = regra[14];
                 vet[4] = regra[17];
                 vet[5] = 99;
                 vet[6] = 99;
                 break;
         case 7: vet[0] = regra[2];
                 vet[1] = regra[8];
                 vet[2] = regra[11];
                 vet[3] = 99;
                 vet[4] = 99;
                 vet[5] = 99;
                 vet[6] = 99;
                 break;
         case 8: vet[0] = regra[1];
                 vet[1] = regra[6];
                 vet[2] = regra[11];
                 vet[3] = regra[14];
                 vet[4] = 99;
                 vet[5] = 99;
                 vet[6] = 99;
                 break;
         case 9: vet[0] = regra[1];
                 vet[1] = regra[7];
                 vet[2] = regra[10];
                 vet[3] = regra[12];
                 vet[4] = 99;
                 vet[5] = 99;
                 vet[6] = 99;
                 break;
         case 10: vet[0] = regra[1];
                  vet[1] = regra[3];
                  vet[2] = regra[7];
                  vet[3] = regra[11];
                  vet[4] = regra[14];
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 11: vet[0] = regra[2];
                  vet[1] = regra[6];
                  vet[2] = regra[12];
                  vet[3] = 99;
                  vet[4] = 99;
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 12: vet[0] = regra[0];
                  vet[1] = regra[3];
                  vet[2] = regra[11];
                  vet[3] = regra[13];
                  vet[4] = regra[17];
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 13: vet[0] = regra[8];
                  vet[1] = regra[19];
                  vet[2] = regra[11];
                  vet[3] = regra[14];
                  vet[4] = 99;
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 14: vet[0] = regra[8];
                  vet[1] = regra[18];
                  vet[2] = regra[14];
                  vet[3] = 99;
                  vet[4] = 99;
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 15: vet[0] = regra[18];
                  vet[1] = regra[9];
                  vet[2] = regra[12];
                  vet[3] = 99;
                  vet[4] = 99;
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 16: vet[0] = regra[6];
                  vet[1] = regra[19];
                  vet[2] = regra[10];
                  vet[3] = regra[14];
                  vet[4] = 99;
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 17: vet[0] = regra[18];
                  vet[1] = regra[10];
                  vet[2] = regra[14];
                  vet[3] = 99;
                  vet[4] = 99;
                  vet[5] = 99;
                  vet[6] = 99;
                  break;
         case 18: vet[0] = regra[0];
                  vet[1] = regra[5];
                  vet[2] = regra[8];
                  vet[3] = regra[11];
                  vet[4] = regra[14];
                  vet[5] = regra[15];
                  vet[6] = 99;
                  break;
         case 19: vet[0] = regra[0];
                  vet[1] = regra[4];
                  vet[2] = regra[6];
                  vet[3] = regra[10];
                  vet[4] = regra[13];
                  vet[5] = regra[16];
                  vet[6] = 99;
                  break;
         case 20: vet[0] = regra[18];
                  vet[1] = regra[12];
                  vet[2] = 99;
                  vet[3] = 99;
                  vet[4] = 99;
                  vet[5] = 99;
                  vet[6] = 99;
                  break;                 
        }        
     return vet;
    }
    
    public static int classifica(int n){
        if(n >= 1 && n <= 10 )
            return 1; //caro
        if(n >= 11 && n <= 20 )
            return 2; //barato
        else
            return 0; //não é porra nenhuma
    }
}
